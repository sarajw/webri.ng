#!/usr/bin/env bash

source ./_shared.sh


function print_usage {
	echo "Usage: $0 [-h|--help]"
  echo "Creates a build artifact suitable for deployment and release. Outputs zip artifact to 'webri.ng/deployment/...'"
}


while [[ $# -gt 0 ]]; do
  key="${1}"

  case $key in
    -?|--help)
    print_usage
		exit 0
    ;;
    *)
    shift
    ;;
  esac
done


# The base project directory.
readonly base_dir="$(cd ../../; echo "${PWD}")"

# Convert all relative dirs to absolute.
readonly src_dir="${base_dir}/src/site"
readonly dist_dir="${src_dir}/dist"
readonly zip_dir="${base_dir}/deployments"


echo ""
echo "▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒"
echo "▒                                                   ▒"
echo "▒        Create Webri.ng deployment artifact        ▒"
echo "▒                                                   ▒"
echo "▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒"
echo ""


# Create build target directory.
if [[ ! -d ${dist_dir} ]]; then
	mkdir -p "${dist_dir}" || die_with_message "Unable to create dist dir! Exiting."
	echo "Created build target dir: '${dist_dir}'"
else
	echo "Build target dir already present."
fi

# Build artifact.
make -C "${src_dir}" clean
make -C "${src_dir}"

# Create artifact zip dir.
if [[ ! -d "${zip_dir}" ]]; then 
	mkdir -p "${zip_dir}" || die_with_message "Failure creating zip directory! Exiting."
	echo "Created artifact target dir: '${zip_dir}'"
else
	echo "Artifact target dir already present."
fi

# We want to mark the deployment with the current git hash
current_timestamp=$(date +%s)
commit_shorthash=$(git -C "${src_dir}" log --pretty=format:'%h' -n 1)
zip_exclude="\"*.git/*\" \"*node_modules/*\""
zip_filename="${zip_dir}/server_${commit_shorthash}@${current_timestamp}.zip"


# Change dir to the dist dir.
cd "${dist_dir}" || die_with_message "Failure changing to dist dir! Exiting."
zip -qr "${zip_filename}" . -x "${zip_exclude}" &&

echo "Finished creating deployment artifact: '${zip_filename}'"
